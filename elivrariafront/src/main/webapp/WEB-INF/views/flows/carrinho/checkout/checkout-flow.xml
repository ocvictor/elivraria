<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
	

	<var name="entrega" class="br.com.elivrariaback.dto.Endereco"/>
	<var name="cartaoNovo" class="br.com.elivrariafront.model.CartaoModelo"/>
	
	<on-start>
		<evaluate expression="checkoutHandler.init(currentUser.name)" result="flowScope.checkoutModelo"/>
	</on-start>

	<view-state id="entrega" view="flows/carrinho/checkout/venda-endereco" model="entrega">
		<on-entry>
			<evaluate expression="checkoutHandler.getEnderecoEntrega(flowScope.checkoutModelo)" result="viewScope.enderecos"/>	
		</on-entry>
		<transition on="selecaoEndereco" to="SalvarSelecaoEndereco" validate="false"/>
		<transition on="salvarEndereco" to="salvarEndereco" />
	</view-state>

	<action-state id="SalvarSelecaoEndereco">		
		<evaluate expression="checkoutHandler.salvarEnderecoSelecionado(flowScope.checkoutModelo, requestParameters.enderecoId)" />
		<transition on="success" to="pagamento" />
	</action-state>

	
	<action-state id="salvarEndereco">		
		<evaluate expression="checkoutHandler.salvarEndereco(flowScope.checkoutModelo, entrega)" />
		<transition on="success" to="pagamento" />
	</action-state>

	<view-state id="pagamento" view="flows/carrinho/checkout/venda-pagamento" model="cartaoNovo">
		<on-entry>
			<evaluate expression="checkoutHandler.getCartao(flowScope.checkoutModelo)" result="viewScope.cartoes"/>
			<evaluate expression="checkoutHandler.getBandeiras()" result="viewScope.bandeiras"/>
			<evaluate expression="checkoutHandler.getCupomTroca(flowScope.checkoutModelo)" result="viewScope.cuponsTroca" />
		</on-entry>
		<transition on="selecaoCartao" to="SalvarSelecaoCartao" validate="false"/>
		<transition on="salvarCartao" to="salvarCartao" />
		<transition on="selecaoCupomTroca" to="selecaoCupomTroca" validate="false"/>
		<transition on="selecaoCupomPromocional" to="selecaoCupomPromocional" validate="false"/>
	</view-state>
	
	<action-state id="selecaoCupomPromocional">		
		<evaluate expression="checkoutHandler.salvarCupomPromocional(flowScope.checkoutModelo, requestParameters.cupomPromocionalId, messageContext)" />
		<transition on="success" to="pagamento" />
		<transition on="totalZerado" to="salvarVenda" />
		<transition on="falha" to="pagamento" />
	</action-state>
	
	<action-state id="selecaoCupomTroca">		
		<evaluate expression="checkoutHandler.salvarCupomTroca(flowScope.checkoutModelo, requestParameters.cupomTrocaId)" />
		<transition on="success" to="pagamento" />
		<transition on="totalZerado" to="salvarVenda" />
	</action-state>
	
	<action-state id="SalvarSelecaoCartao">		
		<evaluate expression="checkoutHandler.salvarCartaoSelecionado(flowScope.checkoutModelo, requestParameters.cartaoId)" />
		<transition on="success" to="processarCartao" />
	</action-state>
	
	<action-state id="salvarCartao">		
		<evaluate expression="checkoutHandler.salvarCartao(flowScope.checkoutModelo, cartaoNovo)" />
		<transition on="success" to="processarCartao" />
	</action-state>
	
	<view-state id="processarCartao" view="flows/carrinho/checkout/venda-processamento-cartao">
		<transition on="salvarVenda" to="salvarVenda"/>
	</view-state>
	
	<action-state id="salvarVenda">		
		<evaluate expression="checkoutHandler.salvarPedido(flowScope.checkoutModelo)" />
		<transition on="success" to="recibo"/>
		<transition on="errorCartao" to="erroCartao" />
	</action-state>
	
	<view-state id="erroCartao" view="flows/carrinho/checkout/venda-erroCartao">		
		<transition on="pagamento" to="pagamento" />
	</view-state>
	
	<end-state id="recibo" view="flows/carrinho/checkout/venda-confirmar">
		<on-entry>
			<evaluate expression="checkoutHandler.getVendaDetalhe(flowScope.checkoutModelo)" result="requestScope.vendaDetalhe"/>
		</on-entry>
	</end-state>
	
	<end-state id="home" view="externalRedirect:contextRelative:/home" />
	<end-state id="error" view="flows/flows-shared/error" />
	
	<global-transitions>
		<transition on="home" to="home" validate="false" />
 		<transition on-exception="java.lang.Exception" to="error" />
	</global-transitions>
	
</flow>